usethis::use_github()
usethis::use_github()
no
no
usethis::use_github()
usethis::use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)`
rlang::last_trace()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
q
q()
usethis::use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_github()
usethis::use_github()
usethis::use_github()
usethis::use_github()
usethis::use_github()
usethis::use_github()
check_uses_git()
usethis::use_github()
usethis::use_github()
usethis::use_github()
usethis::use_github()
rlang::last_trace()
usethis::use_github()
age_group_count <- dengue_12yrs %>%
count(Age_Group)
tmap_mode("view")
pacman::p_load(tidyverse, plotly, sf, tmap)
dengue_daily <- read_csv("data/Dengue_Daily.csv")
summary(dengue_daily)
colnames(dengue_daily) <- c("Onset_Date", "Case_Classification_Date", "Reporting_Date", "Gender",
"Age_Group", "Residential_County_City", "Residential_Town_District",
"Residential_Village", "Smallest_Statistical_Area", "X_coord",
"Y_coord", "Primary_Statistical_Area", "Secondary_Statistical_Area",
"Infection_County_City", "Infection_Town_District", "Infection_Village",
"Imported_Case", "Infection_Country", "Confirmed_Cases",
"Residential_Village_Code", "Infection_Village_Code", "Serotype",
"MOI_Residential_County_Code", "MOI_Residential_Town_Code",
"MOI_Infection_County_Code", "MOI_Infection_Town_Code")
#| echo: FALSE
names(dengue_daily)
#| code-fold: true
#| code-summary: "Show Code for Imported_Case"
dengue_daily <- dengue_daily %>%
mutate(Imported_Case = recode(Imported_Case, "是" = "Yes", "否" = "No"))
#| code-fold: true
#| code-summary: "Show Code for new column Residential_County_City_t"
dengue_daily <- dengue_daily %>%
mutate(Residential_County_City_t = recode(Residential_County_City,
"屏東縣" = "Pingtung County",
"宜蘭縣" = "Yilan County",
"高雄市" = "Kaohsiung City",
"桃園市" = "Taoyuan City",
"新北市" = "New Taipei City",
"台北市" = "Taipei City",
"台南市" = "Tainan City",
"新竹縣" = "Hsinchu County",
"南投縣" = "Nantou County",
"台中市" = "Taichung City",
"新竹市" = "Hsinchu City",
"雲林縣" = "Yunlin County",
"彰化縣" = "Changhua County",
"花蓮縣" = "Hualien County",
"台東縣" = "Taitung County",
"嘉義縣" = "Chiayi County",
"嘉義市" = "Chiayi City",
"基隆市" = "Keelung City",
"苗栗縣" = "Miaoli County",
"澎湖縣" = "Penghu County",
"連江縣" = "Lianjiang County",
"金門縣" = "Kinmen County"))
tw_map <- st_read(dsn = "data/TAIWAN_VILLAGE_2020",
layer = "VILLAGE_MOI_1090324")
st_crs(tw_map)
st_crs(tw_map)
tmap_mode("plot")
tm_shape(tw_map) +
tm_fill(col="white") +
tm_borders(col = "black", lwd=0.3, alpha=0.6)+
tm_layout(
main.title = "Taiwan Villages",
main.title.position = "center",
frame = FALSE)
#| code-fold: true
#| code-summary: "Show Code"
#| eval: FALSE
dengue_daily <- dengue_daily %>%
mutate(Date = ymd(Onset_Date))
# Extract the year from the Date column
dengue_daily <- dengue_daily %>%
mutate(Onset_Year =as.integer(year(Date)))
dengue_daily_aggregated <- dengue_daily %>%
group_by(Age_Group, Residential_County_City_t, Onset_Year) %>%
summarize(Count = n(), .groups = "drop")
cases_by_age <- dengue_daily_aggregated %>%
plot_ly(x = ~Age_Group,
y = ~Count,
color = ~Residential_County_City_t,
text = ~Residential_County_City_t,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
frame = ~Onset_Year) %>%
layout(
title = "Dengue Cases by Age Group",
xaxis = list(title = "Age Group"),
yaxis = list(title = "Count of Cases"),
showlegend = FALSE
)
cases_by_age
#| echo: FALSE
#| fig-height: 10
#| fig-width: 8
dengue_daily <- dengue_daily %>%
mutate(Date = ymd(Onset_Date))
# Extract the year from the Date column
dengue_daily <- dengue_daily %>%
mutate(Onset_Year =as.integer(year(Date)))
dengue_daily_aggregated <- dengue_daily %>%
group_by(Age_Group, Residential_County_City_t, Onset_Year) %>%
summarize(Count = n(), .groups = "drop")
cases_by_age <- dengue_daily_aggregated %>%
plot_ly(x = ~Age_Group,
y = ~Count,
color = ~Residential_County_City_t,
text = ~Residential_County_City_t,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
frame = ~Onset_Year) %>%
layout(
title = "Dengue Cases by Age Group",
xaxis = list(title = "Age Group"),
yaxis = list(title = "Count of Cases"),
showlegend = FALSE
)
cases_by_age
dengue_12yrs <- dengue_daily[dengue_daily$Onset_Date >= as.Date("2013-01-01")
& dengue_daily$Onset_Date <= as.Date("2024-12-31"), ]
dengue_12yrs <- dengue_daily[dengue_daily$Onset_Date >= as.Date("2013-01-01")
& dengue_daily$Onset_Date <= as.Date("2024-12-31"), ]
summary(dengue_12yrs)
sum(is.na(dengue_12yrs))
sum(is.na(dengue_12yrs$X_coord))
sum(is.na(dengue_12yrs$Y_coord))
dengue_12yrs <- dengue_12yrs %>% filter(X_coord != 0, Y_coord != 0)
dengue_12yrs_sf <- st_as_sf(dengue_12yrs, coords = c("X_coord", "Y_coord"),
crs = 3824)
st_crs(dengue_12yrs_sf)
#tw_map_12_yrs <- left_join(tw_map, dengue_12yrs,
#                          by = c("COUNTYNAME" = "Residential_County_City"))
#tmap_mode("plot")
#qtm(tw_map_12_yrs,
#    fill = "Age_Group")
tmap_mode("view")
tm_shape(tw_map) +
tm_polygons() +
tm_shape(dengue_12yrs_sf) +
tm_dots(col = "red")
age_group_count <- dengue_12yrs %>%
count(Age_Group)
print(age_group_count)
dengue_12yrs <- dengue_12yrs %>%
mutate(Age_Group = ifelse(Age_Group %in% c("0", "1", "2", "3", "4"), "0-4", Age_Group),
Age_Group = factor(Age_Group, levels = c("0-4", "5-9",
sort(unique(Age_Group[
Age_Group != "0-4" & Age_Group != "5-9"]
)))))
ggplot(data = dengue_12yrs, aes(x = Age_Group)) +
geom_bar(color = "black", fill = "grey") +
ggtitle("Distribution of Age Groups") +
xlab("Age Group") +
ylab("Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
git rm --cached data_preparation.knit.md
git log
git lfs track
pacman::p_load(tidyverse, plotly, sf, tmap)
