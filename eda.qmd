---
title: "Exploratory Data Analysis (EDA)"
author: "Jia Peng Chua | Zanelle Lee Wenfang"
date-modified: "last-modified"
execute:
    echo: true
    eval: true
    warning: false
    freeze: true
---

# 1. Getting Started

In this section, we conduct exploratory data analysis of dengue cases with relevant factors.

## 1.1 Loading R Packages

The following R packages will be required:

-   `tidyverse`: Used for data manipulation, visualisation and analysis

-   `plotly`: For plotting interactive statistical graphs

-   `sf`: For analysing and visualising spatial data

-   `tmap`: Create static and interactive thematic maps

-   `GGally`: Provide additional visualisation functions

-   `ggstatplot`: For integrating statistical analysis into visualisations

-   `ggmosaic`: For visualisation of categorical data relationships and associations

```{r}
#| code-fold: true
#| code-summary: "Loading R packages"
pacman::p_load(tidyverse, plotly, sf, tmap, GGally, ggstatsplot, ggmosaic)
```

## 1.2 Importing Dengue Dataset

The code chunk below uses `read_csv()` of `readr` to import the `dengue_daily_en` dataset that was saved from the data preparation step into R environment.

```{r}
#| code-fold: true
#| code-summary: "Importing Dengue_Daily dataset"
dengue_daily <- read_csv("data/dengue_daily_en.csv")

summary(dengue_daily)
```

# 2. Overall EDA

## 2.1 Distribution of Dengue Cases by Age Groups

First, we view the distribution of dengue cases by age groups over the years.

```{r}
#| code-fold: true
#| code-summary: "Show Code"
#| fig-width: 8
dengue_daily_aggregated <- dengue_daily %>%
  group_by(Age_Group, Residential_County_City, Onset_Year) %>%
  summarize(Count = n(), .groups = "drop")

cases_by_age <- dengue_daily_aggregated %>%
  plot_ly(x = ~Age_Group, 
          y = ~Count, 
          color = ~Residential_County_City,
          text = ~Residential_County_City, 
          hoverinfo = "text",
          type = 'scatter',
          mode = 'markers',
          frame = ~Onset_Year) %>%
  layout(
    title = "Dengue Cases by Age Group",
    xaxis = list(title = "Age Group"),
    yaxis = list(title = "Count of Cases"),
    showlegend = FALSE
  )

cases_by_age
```

Key observations:

-   In 2002, 2014 and 2015, there was an increase in dengue cases across all age groups in Kaohsiung City.

-   In 2023, dengue cases in Tainan City spiked across all age groups, showing an increasing trend from younger age groups to those aged 70 and above.

```{r}
#| code-fold: true
#| code-summary: "Distribution of Dengue Cases by Age Groups"
ggplot(data = dengue_daily, aes(x = Age_Group)) +
    geom_bar(color = "black", fill = "grey") +  
    ggtitle("Distribution of Age Groups") +
    xlab("Age Group") +
    ylab("Count") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    geom_hline(yintercept = mean(table(dengue_daily$Age_Group)), 
               linetype = "dashed", color = "red", size = 1)
```

Key observations:

-   The number of cases is relatively lower among individuals aged 0 to 19.

-   In contrast, cases are above average for those aged 50 and above, with a noticeable spike among residents over 70 years old.

## 2.2 Dengue Cases Over Time by County City

Let's visualise the number of dengue cases over time by county city.

```{r}
#| code-fold: true
#| code-summary: "Dengue Cases Over Time by County City"
#| fig-height: 10
#| fig-width: 8
dengue_aggregated <- dengue_daily %>%
  group_by(Age_Group, Residential_County_City, Onset_Year) %>%
  summarize(Count = n(), .groups = "drop")

dengue_aggregated$Onset_Year <- as.factor(dengue_aggregated$Onset_Year)

ggplot(dengue_aggregated, aes(x = Onset_Year, y = Count, fill = Age_Group)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Residential_County_City, scales = "free_y") +
  theme_minimal() +
  labs(
    title = "Dengue Cases Over Time by County City",
    x = "Year",
    y = "Case Count",
    fill = "Age Group"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Key observation:

-   In general, there is an increasing trend of dengue cases from 1998 to 2024 across all counties.

-   There is a significant number of cases in Kaohsiung City and Tainan City, with significant spikes in cases in 2014, 2015 and 2023.

## 2.3 Dengue Cases by Epidemiological week

Let's visualise the dengue cases by epidemiological week.

```{r}
#| code-fold: true
#| code-summary: "Dengue Cases by Epidemiological week (Line Chart)"
cases_by_epiweek <- dengue_daily %>%
  group_by(Onset_Epiweek, Onset_Year) %>%
  summarise(Count = n(), .groups = "drop")

mean_cases <- mean(cases_by_epiweek$Count, na.rm = TRUE)

ggplotly(ggplot(cases_by_epiweek, 
                aes(x = Onset_Epiweek, y = Count, 
                    color = Onset_Year, group = Onset_Year)) +
             geom_line(size = 0.5) +  
             geom_hline(yintercept = mean_cases, 
                        linetype = "dashed", color = "red", size = 0.2)+
             annotate("text", x = 10, y = mean_cases + 60, 
                      label = paste("Mean:", round(mean_cases,1)), 
                      color = "black") +
             labs(
                 title = "Dengue Cases by Epidemiological Week Over the Years",
                 x = "Epidemiological Week",
                 y = "Number of Cases",
                 color = "Year"
                 )
         )
```

```{r}
#| code-fold: true
#| code-summary: "Dengue Cases by Epidemiological week (Heatmap)"
ggplotly(ggplot(cases_by_epiweek, 
                aes(x = Onset_Epiweek, y = factor(Onset_Year), fill = Count)) +
             geom_tile() + 
             scale_fill_gradient(low = "white", high = "red") + 
             labs(title = "Dengue Cases by Epiweek",
                  x = "Epidemiological Week", y = "Year", fill = "Case Count") +
             theme_minimal())
```

Key observations:

-   Dengue cases typically increases around epidemiological week 32 and declines around week 45 onwards.

-   The cases spiked in 2014, 2015 and 2023.

-   The 2023 spike coincided with the post-COVID-19 resumption of international travel, potentially contributing to the rise in cases due to increased tourist influx.

```{r}
#| code-fold: true
#| code-summary: "Dengue Cases by Age Group and Epidemiological Week"
#| fig-height: 10
#| fig-width: 12
ggplot(dengue_daily) +
    geom_mosaic(aes(x = product(Onset_Epiweek), fill = Age_Group)) +
    facet_wrap(~Residential_County_City) +
    labs(title = "Dengue Cases by Age Group and Epidemiological Week") + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## 2.4 Imported vs Local Cases

Let's visualise the trend for imported vs local cases.

```{r}
#| code-fold: true
#| code-summary: "Imported vs Local Cases by Epidemiological week"
cases_by_imported_cases <- dengue_daily %>%
  group_by(Onset_Epiweek, Imported_Case) %>%
  summarize(Count = n(), .groups = "drop")

ggplotly(ggplot(cases_by_imported_cases, 
                aes(x = Onset_Epiweek, y = Count, color = Imported_Case, 
                    group = Imported_Case)) +
             geom_line() + 
             geom_point() +   
             labs(title = "Dengue Cases by Epidemiological Week (Imported vs Local)", 
                  x = "Epidemiological Week", y = "Number of Cases",
                  color = "Imported Case")
)
```

```{r}
#| code-fold: true
#| code-summary: "Dengue Cases by Year (Imported vs Local)"
#| fig-height: 10
#| fig-width: 8
cases_by_year_facets <- dengue_daily %>%
  group_by(Onset_Year, Imported_Case, Residential_County_City) %>%
  summarize(Count = n(), .groups = "drop")

cases_by_year_facets$Onset_Year <- as.factor(cases_by_year_facets$Onset_Year)

ggplot(cases_by_year_facets, aes(x = Onset_Year, y = Count, color = Imported_Case, group = Imported_Case)) +
  geom_line() + 
  geom_point() +   
  labs(title = "Dengue Cases by Year (Imported vs Local)", 
       x = "Year", 
       y = "Number of Cases",
       color = "Imported Case") +
  facet_wrap(~ Residential_County_City, scales = "free_y") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Key observations:

-   The local cases are significantly higher than imported cases from epidemiological week 25 to 51 and epidemiological week 1 to 3.

-   In counties like Miaoli County, Taichung City and Yilan County, there were more local cases than imported cases.

-   In general, there is an increasing trend of imported cases in most counties.

# 3. EDA of Outbreak Years

## 3.1 Identifying the Outbreak Years

In this section, we focus on the disease outbreak periods. We will first need to isolate the time period where this outbreak occurs. The data will also be studied by weeks, rather than days.

```{r}
#| code-fold: true
#| code-summary: "Show Code for obtaining number of cases per week"

dengue_daily$Onset_Date <- as.Date(dengue_daily$Onset_Date)

weekly_cases <- dengue_daily %>%
  mutate(week = floor_date(Onset_Date, "week")) %>%
  group_by(week) %>%
  summarise(cases = n())
```

There are 3 outbreak periods namely in 2014, 2015 and 2023. These will also be referred to as *Wave 1*, *Wave 2* and *Wave 3* interchangeably. The start and end dates of these outbreak periods and loaded into *wave1_start*, *wave1_end*, *wave2_start*, *wave2_end*, *wave3_start* and *wave3_end* respectively. The number of cases from the entire dataset is aggregated by weeks are plotted, with the 3 outbreak periods. The 3 outbreak periods are also highlighted.

```{r}
#| code-fold: true
#| code-summary: "Show Code for plotting Weekly Dengue Cases"

wave1_start <- as.Date("2014-05-11")
wave1_end <- as.Date("2015-01-25")

wave2_start <- as.Date("2015-05-24")
wave2_end <- as.Date("2016-02-14")

wave3_start <- as.Date("2023-05-07")
wave3_end <- as.Date("2024-02-04")

dengue_daily <- dengue_daily %>%
  mutate(Wave = case_when(
    Onset_Date >= wave1_start & Onset_Date <= wave1_end ~ "Wave 1",
    Onset_Date >= wave2_start & Onset_Date <= wave2_end ~ "Wave 2",
    Onset_Date >= wave3_start & Onset_Date <= wave3_end ~ "Wave 3",
    TRUE ~ NA_character_
  ))

ggplot(weekly_cases, aes(x = week, y = cases)) +
  geom_line(color = "black") +
#wave1 reference  
  geom_vline(xintercept = c(wave1_start, wave1_end), color = "skyblue4", linetype = "dashed") +
  geom_rect(aes(xmin = wave1_start, xmax = wave1_end,
                ymin = -Inf, ymax = Inf),
            fill = "skyblue4", alpha = 0.008) +
#wave2 reference
  geom_vline(xintercept = c(wave2_start, wave2_end), color = "indianred", linetype = "dashed") +
  geom_rect(aes(xmin = wave2_start, xmax = wave2_end,
                ymin = -Inf, ymax = Inf),
            fill = "indianred", alpha = 0.008) +
#wave3 reference
  geom_vline(xintercept = c(wave3_start, wave3_end), color = "olivedrab4", linetype = "dashed") +
  geom_rect(aes(xmin = wave3_start, xmax = wave3_end,
                ymin = -Inf, ymax = Inf),
            fill = "olivedrab4", alpha = 0.008) +
  
  labs(title = "Weekly Dengue Cases", x = "Week", y = "Cases") +
  theme_minimal()
```

The outbreak periods are then loaded into its respective variable - *wave1*, *wave2* and *wave3*.

```{r}
#| code-fold: true
#| code-summary: "Show Code for obtaining outbreak periods"

wave1 <- weekly_cases %>%
  filter(week >= wave1_start & week <= wave1_end)

wave2 <- weekly_cases %>%
  filter(week >= wave2_start & week <= wave2_end)

wave3 <- weekly_cases %>%
  filter(week >= wave3_start & week <= wave3_end)
```

To properly compare the shape of the graph, the 3 waves will have to share the same axis. Since the outbreak periods occur almost in the same months in the 3 different years, we will plot the graphs according to months instead.

```{r}
#| code-fold: true
#| code-summary: "Show Code for the 3 waves being plotted on same axis (Month)"

wave1 <- wave1 %>% mutate(month_day = format(week, "%m-%d"), Outbreak_Year ="2014", aligned_date = if_else(month(week) <= 3,
                           as.Date(paste0("2024-", month_day)),
                           as.Date(paste0("2023-", month_day)))
  )
wave2 <- wave2 %>% mutate(month_day = format(week, "%m-%d"), Outbreak_Year ="2015", aligned_date = if_else(month(week) <= 3,
                           as.Date(paste0("2024-", month_day)),
                           as.Date(paste0("2023-", month_day)))
  )
wave3 <- wave3 %>% mutate(month_day = format(week, "%m-%d"), Outbreak_Year ="2023", aligned_date = if_else(month(week) <= 3,
                           as.Date(paste0("2024-", month_day)),
                           as.Date(paste0("2023-", month_day)))
  )

# Step 2: Combine all into one dataset
all_waves <- bind_rows(wave1, wave2, wave3)

# Step 3: Plot
ggplot(all_waves, aes(x = aligned_date, y = cases, color = Outbreak_Year)) +
  geom_line(size = 1) +
  scale_x_date(date_labels = "%b",
  breaks = seq(as.Date("2023-05-01"), as.Date("2024-03-01"), by = "1 month"),
    limits = c(as.Date("2023-05-01"), as.Date("2024-03-28"))
  ) +
  labs(title = "Dengue Outbreak Comparison (2014, 2015, 2023)",
       x = "Week", y = "Number of cases", color = "Year of Outbreak") +
  scale_color_manual(values = c("2014" = "skyblue", 
                                "2015" = "indianred", 
                                "2023" = "olivedrab4")) +
  theme_minimal()
```

## 3.2 Proportions in Outbreak Years

To gain a better understanding of the dataset, we further study the ancillary data surrounding the cases during outbreak period.

### 3.2.1. Gender

The gender proportion is almost equal across both genders.

```{r}
#| code-fold: true
#| code-summary: "Show Code plotting Gender proportion"


dengue_daily %>% 
  filter(!is.na(Wave)) %>%
  group_by(Wave, Gender) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Wave) %>%
  mutate(prop = count / sum(count)) %>%
  ggplot(aes(x = Wave, y = prop, fill = Gender)) +
  geom_col(position = "fill") +
  scale_x_discrete(labels = c(
    "Wave 1" = "2014 Outbreak Wave",
    "Wave 2" = "2015 Outbreak Wave",
    "Wave 3" = "2023 Outbreak Wave"
  )) +
  labs(title = "Gender Proportion by Outbreak Year", y = "Proportion", x = "Year of Outbreak") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
    scale_fill_brewer(palette="Pastel1")
```

### 3.2.2. Imported Cases

There are significantly more local cases than foreign ones during outbreak periods.

```{r}
#| code-fold: true
#| code-summary: "Show Code plotting Imported Cases proportion"

dengue_daily %>%
  filter(!is.na(Wave)) %>%
  group_by(Wave, Imported_Case) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Wave) %>%
  mutate(prop = count / sum(count)) %>%
  ggplot(aes(x = Wave, y = prop, fill = Imported_Case)) +
  geom_col(position = "fill") +
  scale_x_discrete(labels = c(
    "Wave 1" = "2014 Outbreak Wave",
    "Wave 2" = "2015 Outbreak Wave",
    "Wave 3" = "2023 Outbreak Wave"
  )) +
  labs(title = "Imported Case Proportion by Outbreak Year", y = "Proportion", x = "Outbreak Year") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  scale_fill_brewer(palette="Pastel1")
```

### 3.2.3. Age Group

Generally, there are more older people that are infected during outbreak periods.

```{r}
#| code-fold: true
#| code-summary: "Show Code plotting Age Group proportion"

dengue_daily %>%
  filter(!is.na(Wave)) %>%
  group_by(Wave, Age_Group) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Wave) %>%
  mutate(prop = count / sum(count)) %>%
  ggplot(aes(x = Wave, y = prop, fill = Age_Group)) +
  geom_col(position = "fill") +
  scale_x_discrete(labels = c(
    "Wave 1" = "2014 Outbreak Wave",
    "Wave 2" = "2015 Outbreak Wave",
    "Wave 3" = "2023 Outbreak Wave"
  )) +
  labs(title = "Age Group Proportion by Outbreak Year", y = "Proportion", x = "Outbreak Year") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  scale_fill_manual(values = c("mistyrose", "darkcyan", "snow3", "orchid4", "royalblue", "burlywood2", "maroon", "cadetblue", "lightsalmon3", "lightpink1", "aquamarine4", "plum4", "indianred", "lightsalmon", "antiquewhite"))
```

### 3.2.4. Serotype

There are many rows with NA values. However, the rows with values are all plotted, and it can be seen that the most common strains are Type 1 and Type 2.

```{r}
#| code-fold: true
#| code-summary: "Show Code plotting Serotype proportion"


dengue_daily %>%
  filter(!is.na(Wave)) %>%
  filter(!is.na(Serotype)) %>%
  group_by(Wave, Serotype) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Wave) %>%
  mutate(prop = count / sum(count)) %>%
  ggplot(aes(x = Wave, y = prop, fill = Serotype)) +
  geom_col(position = "fill") +
  scale_x_discrete(labels = c(
    "Wave 1" = "2014 Outbreak Wave",
    "Wave 2" = "2015 Outbreak Wave",
    "Wave 3" = "2023 Outbreak Wave"
  )) +
  labs(title = "Serotype Proportion by Outbreak Year", y = "Proportion", x = "Outbreak Year") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  scale_fill_brewer(palette="Pastel1")
```
